blueprint:
  name: pico_pc_switch
  description: |
    ## Multi-on

    ## ST 스위치에 따라 RP-PICO 를 이용해 PC를 제어

    ## 매 10분 마다 PC 상태를 확인하여 ST 스위치에 반영

    ## Requirements
    esphome 을 이용하여 RP-PICO를 연동하고, PC에 설치 후 이용
  domain: automation
  input:
    pc_st_switch:
      name: PC ST 스위치
      selector:
        entity:
          domain: switch
    pc_status_sensor:
      name: PC 상태 센서
      selector:
        entity:
          domain: binary_sensor
    pc_button:
      name: PC 버튼
      selector:
        entity:
          domain: button

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input 'pc_st_switch'
  - platform: time_pattern
    minutes: '/10'

condition: []

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'pc_st_switch'
            state: 'on'
          - condition: state
            entity_id: !input 'pc_status_sensor'
            state: 'off'
        sequence:
          - service: button.press
            target:
              entity_id: !input 'pc_button'
      - conditions:
          - condition: state
            entity_id: !input 'pc_st_switch'
            state: 'off'
          - condition: state
            entity_id: !input 'pc_status_sensor'
            state: 'on'
        sequence:
          - service: button.press
            target:
              entity_id: !input 'pc_button'
  - delay: '00:00:05'
  - condition: template
    value_template: "{{ now().minute % 10 == 0 }}"
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'pc_status_sensor'
            state: 'on'
        sequence:
          - service: switch.turn_on
            entity_id: !input 'pc_st_switch'
      - conditions:
          - condition: state
            entity_id: !input 'pc_status_sensor'
            state: 'off'
        sequence:
          - service: switch.turn_off
            entity_id: !input 'pc_st_switch'
